# Configure a default setup of Home Assistant (frontend, api, etc)
#
default_config:

# Uncomment this if you are using SSL/TLS, running in Docker container, etc.
http:
 server_port: 80



# Text to speech
tts:
  - platform: google_translate
    base_url: http://10.46.2.5
    service_name: google_say

group: !include groups.yaml
automation: !include automations.yaml
script: !include scripts.yaml
scene: !include scenes.yaml

nibe:
  systems:
    - system: 72824
      units:
        - unit: 0
          categories: true
      thermostats: 
        1:
          name: Hall
          current_temperature: sensor.vardagsrum_temperature
          systems: 1

camera:
  - platform: generic
    name: Door
    still_image_url: !secret streamstill
    stream_source: !secret streamurl
  
  - platform: xiaomi_cloud_map_extractor
    host: !secret vacumhost
    token: !secret vacumtoken
    username: !secret miuser
    password: !secret mipass
    country: "de"
    name: "My Vacuum Camera"
    room_colors:
      1: [240, 178, 122]
      2: [133, 193, 233]
      3: [217, 136, 128]
      4: [52, 152, 219]
      5: [205, 97, 85]
      6: [243, 156, 18]
      7: [88, 214, 141]
      8: [245, 176, 65]
      9: [252, 212, 81]
      10: [72, 201, 176]
      11: [84, 153, 199]
      12: [133, 193, 233]
      13: [245, 176, 65]
      14: [82, 190, 128]
      15: [72, 201, 176]
      16: [165, 105, 18]
    draw:
      - charger
      - path
      - goto_path
      - predicted_path
      - no_go_zones
      - no_mopping_zones
      - vacuum_position
      - virtual_walls
      - zones
    auto_update: true

frontend:
  themes: !include_dir_merge_named themes

shelly:
  sensors:
    - all

fan:
  - platform: xiaomi_miio_fan
    name: Vindy
    model: zhimi.fan.za4
    host: 192.168.1.54
    token: !secret fantoken

  - platform: template
    fans:
      kitchen_fan:
        unique_id: kitchen_fan
        friendly_name: "Hob Fan"
        speed_template: "{{ states('sensor.kitchen_fan')|int }}"
        value_template: >
          {% if states('sensor.kitchen_fan')|int > 0 -%}
            on
          {%- else -%}
            off
          {%- endif %}
        turn_on:
          - service: shell_command.set_kitchen_fan
            data_template:
              value: 5
          - delay: 2
          - service: homeassistant.update_entity
            entity_id: sensor.kitchen_fan
        turn_off:
          - service: shell_command.set_kitchen_fan
            data_template:
              value: 0
          - delay: 2
          - service: homeassistant.update_entity
            entity_id: sensor.kitchen_fan
        set_speed:
          - service: shell_command.set_kitchen_fan
            data_template:
              value: "{{ speed }}"
          - delay: 2
          - service: homeassistant.update_entity
            entity_id: sensor.kitchen_fan
        speeds:
          - "0"
          - "1"
          - "2"
          - "3"
          - "4"
          - "5"
          - "6"
          - "7"
          - "8"

shell_command:
  set_kitchen_fan: ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -i /config/.ssh/id_rsa pi@192.168.1.57 /home/pi/scripts/set_kitchen_fan.sh {{ value }}

  set_kitchen_fan_light: ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -i /config/.ssh/id_rsa pi@192.168.1.57 /home/pi/scripts/set_kitchen_fan_light.sh {{ value }}


logger:
  default: error
#  logs:
#     pydeconz: debug
#    homeassistant.components.deconz: debug
#    custom_components.airthings_wave: debug

vacuum:
  - platform: xiaomi_miio
    host: !secret vacumhost
    token: !secret vacumtoken


#homekit


homekit:
  auto_start: false
  filter:
   include_entities:
      - sensor.datorrum_temperature
      - sensor.vardagsrum_temperature
      - sensor.tvattmaskinen_minuter_kvar_homekit
      - sensor.sovrum_temperature
      - binary_sensor.tvattmaskinen_klar_homekit
      - binary_sensor.mailbox
      - camera.door
      - light.shelly_ceiling_bedroom
      - light.shelly_window_bedroom
      - switch.shelly_elfa
      - cover.rollerblind
      - switch.shelly_2nd_tv_left
      - switch.shelly_2nd_tv_right
      - switch.fibaro_double_switch_tv_2nd_switch
      - switch.fibaro_double_window_lamp
      - light.matsal_celing_level
      - light.ceiling_livingroom_level
      - light.window_lamp_livingroom_level
      - light.window_matsal_level
      - light.tv_bench_level
      - switch.shelly_sofa_left
      - switch.shelly_sofa_right
      - switch.shelly_washer
      - switch.shelly_wc1st
      - switch.shelly_wc2nd
      - switch.shelly_storage
      - light.kitchen_lamp_level
      - light.kitchen_bench
      - light.kitchen_spots
      - switch.clothes_lamp_switch
      - switch.clothes_lamp_switch
      - switch.mirror_light
      - switch.stair_light_switch
      - light.shelly_shblb_1_3cc627
      - light.office_shelf
      - binary_sensor.garageport
      - light.kitchen_fan_light
      - fan.kitchen_fan
  entity_config:
   binary_sensor.mailbox:
      linked_battery_sensor: sensor.aeotec_mailbox_sensor_battery_level
      low_battery_threshold: 31
   camera.door:
      support_audio: True
      #linked_doorbell_sensor: binary_sensor.fibaro_wc_1st_motion_sensor_sensor
      #video_codec: copy
#Verisure
verisure:
  username: !secret verisureuser
  password: !secret verisurepass

litter_robot:
  username: !secret litteruser
  password: !secret litterpass
  scan_interval: 120
  
 #Led strip support
 
homeassistant:
  customize: !include customize.yaml
  
light:
  - platform: group
    name: Kitchen bench
    entities:
      - light.big_bench
      - light.small_bench  
  - platform: template
    lights:
      kitchen_fan_light:
        unique_id: kitchen_fan_light
        friendly_name: "Hob"
        level_template: "{{ states('sensor.kitchen_fan_light')|int }}"
        value_template: "{{ states('sensor.kitchen_fan_light')|int > 0 }}"
        turn_on:
          - service: shell_command.set_kitchen_fan_light
            data_template:
              value: 255
          - delay: 2
          - service: homeassistant.update_entity
            entity_id: sensor.kitchen_fan_light
        turn_off:
          - service: shell_command.set_kitchen_fan_light
            data_template:
              value: 0
          - delay: 2
          - service: homeassistant.update_entity
            entity_id: sensor.kitchen_fan_light
        set_level:
          - service: shell_command.set_kitchen_fan_light
            data_template:
              value: "{{ brightness }}"
          - delay: 2
          - service: homeassistant.update_entity
            entity_id: sensor.kitchen_fan_light
  
      
sensor:

  - platform: imap_email_content
    server: imap.gmail.com
    scan_interval: 1
    name: vsuremail
    port: 993
    username: !secret gmailacc
    password: !secret gmailpass
    senders:
      - !secret gmailsender
    value_template: >-
       {% if 'Avlarmat' in subject %}
         Disarmed
       {% elif 'Pålarmat' in subject %}
         Armed
       {% endif %}

  - platform: airthings_wave
    scan_interval: 120
    mac: 98:07:2D:9E:FD:98

  - platform: rest
    name: tvattmaskin_tid_klar
    value_template: '{{ value_json.components.main.washerOperatingState.completionTime.value }}'
    resource: https://api.smartthings.com/v1/devices/8c072516-a256-88c4-5cf2-41d8d46eb291/status
    headers:
      Authorization: !secret samsungwasher
    scan_interval: 60
    
  - platform: rest
    name: tvattmaskin_status
    value_template: '{{ "Tvättmaskinen" }}'
    json_attributes:
    - components
    resource: https://api.smartthings.com/v1/devices/8c072516-a256-88c4-5cf2-41d8d46eb291/status
    headers:
     Authorization: !secret samsungwasher
    scan_interval: 60
   
  - platform: template
    sensors:
      tvattmaskin_status_riktiga:
       value_template: >
         {% set machine_status = states.sensor.tvattmaskin_status.attributes.components.main.washerOperatingState.machineState.value %} 
         {{ machine_status }}
  - platform: template
    sensors:
      tvattmaskin_minuter_kvar:
        friendly_name: Tvättmaskin
        value_template: >
         {% if (float(float(as_timestamp(states('sensor.tvattmaskin_tid_klar'))-as_timestamp(now()))/60) | round(0)) > 0 and states.sensor.tvattmaskin_status_riktiga.state == 'run' %}
         {{ float(float(as_timestamp(states('sensor.tvattmaskin_tid_klar'))-as_timestamp(now()))/60) | round(0)}}
         {% else %}
          {{ float(0.0) | round(0)}}
         {% endif %}
        unit_of_measurement: "min"
        
  - platform: template
    sensors:
      tvattmaskinen_minuter_kvar_homekit:
        friendly_name: Tvättmaskinen
        device_class: temperature
        value_template:  '{{ float(states.sensor.tvattmaskin_minuter_kvar.state) }}'
        unit_of_measurement: "°C"
        
  - platform: systemmonitor
    resources:
      - type: memory_use_percent
      - type: processor_use
      - type: disk_use_percent
        arg: /

  - platform: command_line
    name: kitchen_fan
    command: "ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -i /config/.ssh/id_rsa pi@192.168.1.57 /home/pi/scripts/get_kitchen_fan.sh"

  - platform: command_line
    name: kitchen_fan_light
    command: "ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -i /config/.ssh/id_rsa pi@192.168.1.57 /home/pi/scripts/get_kitchen_fan_light.sh"
        
binary_sensor:
  - platform: template
    sensors: 
      tvattmaskinen_klar_homekit:
        friendly_name: "Tvättmaskinen klar"
        device_class: occupancy
        value_template: >
          {{ states('sensor.tvattmaskinen_minuter_kvar_homekit') | float == 0.0 }}
          
   
  - platform: template
    sensors:
      mailbox:
        friendly_name: "Mailbox"
        device_class: door
        value_template: "{{ is_state('sensor.aeon_labs_zw120_door_window_sensor_gen5_access_control', '22') }}"
  
  - platform: ping
    host: 10.46.2.1
    name: "ping"
    count: 2
    scan_interval: 1
        
input_boolean:
    testmotion:
     name: testmotion
     initial: off
    
    testswitch:
     name: testswitch
     initial: off

switch:
  - platform: template
    switches:
      litter_robot_reset_drawer:
        friendly_name: "Reset drawer"
        value_template: "{{ is_state('sensor.litter_robot_tesla_meowdel_s_status', 'Clean Cycling') }}"
        icon_template: "mdi:delete-restore"
        turn_on:
          service: litter_robot.reset_drawer
        turn_off:
